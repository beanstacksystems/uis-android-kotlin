// Generated by view binder compiler. Do not edit!
package com.bss.uis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bss.uis.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAttendantDetailsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextInputEditText EmailEt;

  @NonNull
  public final TextInputLayout EmailEtLayout;

  @NonNull
  public final AppCompatButton btnBackAttendant;

  @NonNull
  public final AppCompatButton btnSubmit;

  @NonNull
  public final TextInputEditText contactEt;

  @NonNull
  public final TextInputLayout contactInputLayout;

  @NonNull
  public final TextInputEditText dateOfBirth;

  @NonNull
  public final TextInputLayout dateOfBirthLayout;

  @NonNull
  public final TextInputEditText etRelationship;

  @NonNull
  public final LinearLayout footer;

  @NonNull
  public final TextInputEditText incomeEt;

  @NonNull
  public final TextInputLayout incomeInputLayout;

  @NonNull
  public final TextInputEditText personName;

  @NonNull
  public final TextInputLayout personNameLayout;

  @NonNull
  public final TextView persondetailPopUpHeader;

  @NonNull
  public final CircleImageView profileImage;

  @NonNull
  public final ImageView profileImageEditLayout;

  @NonNull
  public final TextInputLayout relationshipLayout;

  @NonNull
  public final TextInputEditText textGender;

  @NonNull
  public final TextInputLayout textGenderLayout;

  @NonNull
  public final TextInputEditText textOccupation;

  @NonNull
  public final TextInputLayout textOccupationLayout;

  @NonNull
  public final TextInputLayout textPanadharLayout;

  @NonNull
  public final TextInputEditText textPanadharSelect;

  @NonNull
  public final TextInputEditText textSalutation;

  @NonNull
  public final TextInputLayout textSalutationLayout;

  private FragmentAttendantDetailsBinding(@NonNull FrameLayout rootView,
      @NonNull TextInputEditText EmailEt, @NonNull TextInputLayout EmailEtLayout,
      @NonNull AppCompatButton btnBackAttendant, @NonNull AppCompatButton btnSubmit,
      @NonNull TextInputEditText contactEt, @NonNull TextInputLayout contactInputLayout,
      @NonNull TextInputEditText dateOfBirth, @NonNull TextInputLayout dateOfBirthLayout,
      @NonNull TextInputEditText etRelationship, @NonNull LinearLayout footer,
      @NonNull TextInputEditText incomeEt, @NonNull TextInputLayout incomeInputLayout,
      @NonNull TextInputEditText personName, @NonNull TextInputLayout personNameLayout,
      @NonNull TextView persondetailPopUpHeader, @NonNull CircleImageView profileImage,
      @NonNull ImageView profileImageEditLayout, @NonNull TextInputLayout relationshipLayout,
      @NonNull TextInputEditText textGender, @NonNull TextInputLayout textGenderLayout,
      @NonNull TextInputEditText textOccupation, @NonNull TextInputLayout textOccupationLayout,
      @NonNull TextInputLayout textPanadharLayout, @NonNull TextInputEditText textPanadharSelect,
      @NonNull TextInputEditText textSalutation, @NonNull TextInputLayout textSalutationLayout) {
    this.rootView = rootView;
    this.EmailEt = EmailEt;
    this.EmailEtLayout = EmailEtLayout;
    this.btnBackAttendant = btnBackAttendant;
    this.btnSubmit = btnSubmit;
    this.contactEt = contactEt;
    this.contactInputLayout = contactInputLayout;
    this.dateOfBirth = dateOfBirth;
    this.dateOfBirthLayout = dateOfBirthLayout;
    this.etRelationship = etRelationship;
    this.footer = footer;
    this.incomeEt = incomeEt;
    this.incomeInputLayout = incomeInputLayout;
    this.personName = personName;
    this.personNameLayout = personNameLayout;
    this.persondetailPopUpHeader = persondetailPopUpHeader;
    this.profileImage = profileImage;
    this.profileImageEditLayout = profileImageEditLayout;
    this.relationshipLayout = relationshipLayout;
    this.textGender = textGender;
    this.textGenderLayout = textGenderLayout;
    this.textOccupation = textOccupation;
    this.textOccupationLayout = textOccupationLayout;
    this.textPanadharLayout = textPanadharLayout;
    this.textPanadharSelect = textPanadharSelect;
    this.textSalutation = textSalutation;
    this.textSalutationLayout = textSalutationLayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAttendantDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAttendantDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_attendant_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAttendantDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Email_et;
      TextInputEditText EmailEt = ViewBindings.findChildViewById(rootView, id);
      if (EmailEt == null) {
        break missingId;
      }

      id = R.id.Email_etLayout;
      TextInputLayout EmailEtLayout = ViewBindings.findChildViewById(rootView, id);
      if (EmailEtLayout == null) {
        break missingId;
      }

      id = R.id.btnBackAttendant;
      AppCompatButton btnBackAttendant = ViewBindings.findChildViewById(rootView, id);
      if (btnBackAttendant == null) {
        break missingId;
      }

      id = R.id.btnSubmit;
      AppCompatButton btnSubmit = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.contact_et;
      TextInputEditText contactEt = ViewBindings.findChildViewById(rootView, id);
      if (contactEt == null) {
        break missingId;
      }

      id = R.id.contactInputLayout;
      TextInputLayout contactInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (contactInputLayout == null) {
        break missingId;
      }

      id = R.id.dateOfBirth;
      TextInputEditText dateOfBirth = ViewBindings.findChildViewById(rootView, id);
      if (dateOfBirth == null) {
        break missingId;
      }

      id = R.id.dateOfBirthLayout;
      TextInputLayout dateOfBirthLayout = ViewBindings.findChildViewById(rootView, id);
      if (dateOfBirthLayout == null) {
        break missingId;
      }

      id = R.id.et_relationship;
      TextInputEditText etRelationship = ViewBindings.findChildViewById(rootView, id);
      if (etRelationship == null) {
        break missingId;
      }

      id = R.id.footer;
      LinearLayout footer = ViewBindings.findChildViewById(rootView, id);
      if (footer == null) {
        break missingId;
      }

      id = R.id.income_et;
      TextInputEditText incomeEt = ViewBindings.findChildViewById(rootView, id);
      if (incomeEt == null) {
        break missingId;
      }

      id = R.id.incomeInputLayout;
      TextInputLayout incomeInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (incomeInputLayout == null) {
        break missingId;
      }

      id = R.id.personName;
      TextInputEditText personName = ViewBindings.findChildViewById(rootView, id);
      if (personName == null) {
        break missingId;
      }

      id = R.id.personNameLayout;
      TextInputLayout personNameLayout = ViewBindings.findChildViewById(rootView, id);
      if (personNameLayout == null) {
        break missingId;
      }

      id = R.id.persondetailPopUpHeader;
      TextView persondetailPopUpHeader = ViewBindings.findChildViewById(rootView, id);
      if (persondetailPopUpHeader == null) {
        break missingId;
      }

      id = R.id.profile_image;
      CircleImageView profileImage = ViewBindings.findChildViewById(rootView, id);
      if (profileImage == null) {
        break missingId;
      }

      id = R.id.profile_image_edit_layout;
      ImageView profileImageEditLayout = ViewBindings.findChildViewById(rootView, id);
      if (profileImageEditLayout == null) {
        break missingId;
      }

      id = R.id.relationship_layout;
      TextInputLayout relationshipLayout = ViewBindings.findChildViewById(rootView, id);
      if (relationshipLayout == null) {
        break missingId;
      }

      id = R.id.text_gender;
      TextInputEditText textGender = ViewBindings.findChildViewById(rootView, id);
      if (textGender == null) {
        break missingId;
      }

      id = R.id.text_gender_layout;
      TextInputLayout textGenderLayout = ViewBindings.findChildViewById(rootView, id);
      if (textGenderLayout == null) {
        break missingId;
      }

      id = R.id.text_occupation;
      TextInputEditText textOccupation = ViewBindings.findChildViewById(rootView, id);
      if (textOccupation == null) {
        break missingId;
      }

      id = R.id.text_occupation_layout;
      TextInputLayout textOccupationLayout = ViewBindings.findChildViewById(rootView, id);
      if (textOccupationLayout == null) {
        break missingId;
      }

      id = R.id.text_panadhar_layout;
      TextInputLayout textPanadharLayout = ViewBindings.findChildViewById(rootView, id);
      if (textPanadharLayout == null) {
        break missingId;
      }

      id = R.id.text_panadhar_select;
      TextInputEditText textPanadharSelect = ViewBindings.findChildViewById(rootView, id);
      if (textPanadharSelect == null) {
        break missingId;
      }

      id = R.id.text_salutation;
      TextInputEditText textSalutation = ViewBindings.findChildViewById(rootView, id);
      if (textSalutation == null) {
        break missingId;
      }

      id = R.id.text_salutation_layout;
      TextInputLayout textSalutationLayout = ViewBindings.findChildViewById(rootView, id);
      if (textSalutationLayout == null) {
        break missingId;
      }

      return new FragmentAttendantDetailsBinding((FrameLayout) rootView, EmailEt, EmailEtLayout,
          btnBackAttendant, btnSubmit, contactEt, contactInputLayout, dateOfBirth,
          dateOfBirthLayout, etRelationship, footer, incomeEt, incomeInputLayout, personName,
          personNameLayout, persondetailPopUpHeader, profileImage, profileImageEditLayout,
          relationshipLayout, textGender, textGenderLayout, textOccupation, textOccupationLayout,
          textPanadharLayout, textPanadharSelect, textSalutation, textSalutationLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
