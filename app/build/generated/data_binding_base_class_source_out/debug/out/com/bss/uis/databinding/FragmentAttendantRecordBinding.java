// Generated by view binder compiler. Do not edit!
package com.bss.uis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.bss.uis.R;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAttendantRecordBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView addressPopUpHeader;

  @NonNull
  public final TabLayout attendantTabLayout;

  @NonNull
  public final ViewPager attendantTabviewPager;

  private FragmentAttendantRecordBinding(@NonNull FrameLayout rootView,
      @NonNull TextView addressPopUpHeader, @NonNull TabLayout attendantTabLayout,
      @NonNull ViewPager attendantTabviewPager) {
    this.rootView = rootView;
    this.addressPopUpHeader = addressPopUpHeader;
    this.attendantTabLayout = attendantTabLayout;
    this.attendantTabviewPager = attendantTabviewPager;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAttendantRecordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAttendantRecordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_attendant_record, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAttendantRecordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addressPopUpHeader;
      TextView addressPopUpHeader = ViewBindings.findChildViewById(rootView, id);
      if (addressPopUpHeader == null) {
        break missingId;
      }

      id = R.id.attendant_tabLayout;
      TabLayout attendantTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (attendantTabLayout == null) {
        break missingId;
      }

      id = R.id.attendant_tabviewPager;
      ViewPager attendantTabviewPager = ViewBindings.findChildViewById(rootView, id);
      if (attendantTabviewPager == null) {
        break missingId;
      }

      return new FragmentAttendantRecordBinding((FrameLayout) rootView, addressPopUpHeader,
          attendantTabLayout, attendantTabviewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
