// Generated by Dagger (https://dagger.dev).
package com.bss.uis.domain.usecase;

import com.bss.uis.domain.repository.Repository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PincodeUsecase_Factory implements Factory<PincodeUsecase> {
  private final Provider<Repository> repositoryProvider;

  public PincodeUsecase_Factory(Provider<Repository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public PincodeUsecase get() {
    return newInstance(repositoryProvider.get());
  }

  public static PincodeUsecase_Factory create(Provider<Repository> repositoryProvider) {
    return new PincodeUsecase_Factory(repositoryProvider);
  }

  public static PincodeUsecase newInstance(Repository repository) {
    return new PincodeUsecase(repository);
  }
}
